name: Latest blog posts workflow
permissions:
  contents: write
  pull-requests: write
on:
  schedule:
    # Runs every Sunday at midnight
    - cron: "0 0 * * 0"
  workflow_dispatch: # Allow manual trigger

jobs:
  update-readme-with-blog:
    name: Update README with latest blog posts
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.SANITY_DATASET }}
      NEXT_PUBLIC_AUTHOR_NAME: ${{ secrets.AUTHOR_NAME }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install @sanity/client feed

      - name: Update README with blog posts
        uses: gautamkrishnar/blog-post-workflow@master
        with:
          feed_list: "${{ env.NEXT_PUBLIC_SITE_URL }}/api/articles-feed"
          max_post_count: 5
          template: "[$title]($url)"
          disable_sort: false

      - name: Commit and push if changed
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add -A
          git diff --staged --quiet || git commit -m "Update blog posts in README"

          # Try to push directly first (for non-protected branches)
          git push || (
            # If direct push fails, create and push to a new branch, then create a PR
            BRANCH_NAME="update-blog-posts-$(date +%s)"
            git checkout -b $BRANCH_NAME
            git push -u origin $BRANCH_NAME
            
            # Create PR using GitHub CLI
            gh pr create --title "Update blog posts in README" \
                         --body "Automated update of blog posts in README by GitHub Actions" \
                         --base main \
                         --head $BRANCH_NAME
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

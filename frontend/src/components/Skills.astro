---
import PieChart from '../components/PieChart.astro'
---

<section
  class="mx-4 flex flex-col text-white lg:mx-0 lg:mt-4 lg:min-h-[500px] lg:flex-row"
>
  <div class="basis-3/4 rounded-lg bg-[#242F40] p-4 lg:col-span-8">
    <h2>Skills</h2>
    <div class="min-h-40 flex flex-col lg:flex-row">
      <div class="h-auto basis-1/2">
        <ul
          class="skills-list h-full w-full border-dashed pr-3 lg:border-r-2 lg:pt-6"
        >
          <li class="flex flex-row items-center justify-between">
            <i class="fa-solid fa-circle"></i><i class="fa-solid fa-circle"
            ></i><i class="fa-solid fa-circle"></i><i
              class="fa-regular fa-circle"></i><i class="fa-regular fa-circle"
            ></i>
            <span>Problem Solving</span>
          </li>
          <li class="flex flex-row items-center justify-between">
            <i class="fa-solid fa-circle"></i><i class="fa-solid fa-circle"
            ></i><i class="fa-solid fa-circle"></i><i
              class="fa-regular fa-circle"></i><i class="fa-regular fa-circle"
            ></i>
            <span>Problem Solving</span>
          </li>
          <li class="flex flex-row items-center justify-between">
            <i class="fa-solid fa-circle"></i><i class="fa-solid fa-circle"
            ></i><i class="fa-solid fa-circle"></i><i
              class="fa-regular fa-circle"></i><i class="fa-regular fa-circle"
            ></i>
            <span>Problem Solving</span>
          </li>
        </ul>
      </div>
      <div class="skills-list h-full basis-1/2 pr-3 lg:pt-6">
        <ul class="lg:p-3">
          <li class="flex flex-row items-center justify-between">
            <i class="fa-solid fa-circle"></i><i class="fa-solid fa-circle"
            ></i><i class="fa-solid fa-circle"></i><i
              class="fa-regular fa-circle"></i><i class="fa-regular fa-circle"
            ></i>
            <span>Problem Solving</span>
          </li>
          <li class="flex flex-row items-center justify-between">
            <i class="fa-solid fa-circle"></i><i class="fa-solid fa-circle"
            ></i><i class="fa-solid fa-circle"></i><i
              class="fa-regular fa-circle"></i><i class="fa-regular fa-circle"
            ></i>
            <span>Problem Solving</span>
          </li>
          <li class="flex flex-row items-center justify-between">
            <i class="fa-solid fa-circle"></i><i class="fa-solid fa-circle"
            ></i><i class="fa-solid fa-circle"></i><i
              class="fa-regular fa-circle"></i><i class="fa-regular fa-circle"
            ></i>
            <span>Problem Solving</span>
          </li>
        </ul>
      </div>
    </div>
    <div class="flex flex-row flex-nowrap justify-between py-6">
      <PieChart
        icon="html5"
        percent={90}
        offset={10}
        delay={450}
        speed={800}
        iconPackage="brands"
        title="HTML5"
      />
      <PieChart
        icon="css3"
        iconPackage="brands"
        title="CSS"
        percent={90}
        offset={10}
        delay={450}
        speed={500}
      />
      <PieChart
        icon="js"
        iconPackage="brands"
        title="JavaScript"
        percent={90}
        offset={10}
        delay={450}
        speed={800}
      />
      <PieChart
        icon="react"
        iconPackage="brands"
        title="ReactJS"
        percent={90}
        offset={10}
        delay={450}
        speed={800}
      />
    </div>
  </div>
  <div
    class="mx-4 mb-0 mt-[-16px] basis-1/4 rounded-lg bg-[#CCA43B] p-4 drop-shadow-md lg:col-span-3 lg:mb-4 lg:ml-[-16px] lg:mr-0 lg:mt-4"
  >
    <div>
      <h2 class="mb-2 text-center text-3xl lg:text-left lg:text-2xl">
        Kyle Ross
      </h2>
      <p class="mb-4 text-sm">I build things for the internet</p>
      <p class="text-xs">
        It is a long established fact that a reader will be distracted by the
        readable content of a page when looking at its layout. The point of
        using Lorem Ipsum is that it has a more-or-less normal distributio
      </p>
    </div>
  </div>
</section>
<style>
  .skills-list li {
    @apply mb-6 text-right;
  }
</style>
<script is:inline>
  //grab the SVG
  const pieCharts = document.querySelectorAll('[data-graphic-container]')

  // //If user has set there browser to reduce web animations
  const preferReducedMotion = window.matchMedia(
    '(prefers-reduced-motion: reduce)'
  ).matches

  //Make sure all elements are visible, before triggering animations
  const pieChartObserver = new IntersectionObserver(
    (entries) => {
      entries.forEach((chart) => {
        if (chart.isIntersecting) {
          //grab the pie graphic
          const pie = chart.target.querySelector('[data-pie]')

          let speed = +pie.dataset.speed || 0
          preferReducedMotion && (speed = 0)
          const delay = +pie.dataset.delay || 0
          const percent = +pie.dataset.percent || 0
          const circle = chart.target.querySelector('circle')
          const icon = chart.target.querySelector('i')
          const text = chart.target.querySelector('text')
          const graphic = chart.target.querySelector('[data-graphic]')

          text.textContent = `${percent}%`
          chart.target.setAttribute(
            'aria-label',
            `${percent} percent pie chart`
          )
          icon.animate([{ opacity: 0 }, { opacity: 1 }], {
            duration: 1000,
            easing: 'cubic-bezier(0.57,-0.04, 0.41, 1.13)',
            fill: 'forwards',
          })
          circle.animate(
            [
              {
                strokeDashoffset: 100,
              },
              {
                strokeDashoffset: 100 - percent,
              },
            ],
            {
              duration: speed,
              easing: 'cubic-bezier(0.57,-0.04, 0.41, 1.13)',
              fill: 'forwards',
            }
          )
          text.animate(
            [
              {
                opacity: 0,
                transform: 'translateY(20%)',
              },
              {
                opacity: 1,
                transform: 'translateY(18%)',
              },
            ],
            {
              delay: preferReducedMotion ? 0 : delay,
              duration: preferReducedMotion ? 0 : 300,
              easing: 'cubic-bezier(0.57,-0.04, 0.41, 1.13)',
              fill: 'forwards',
            }
          )
          //Hover Effect
          //Moving Animation Event
          chart.target.addEventListener('mousemove', (e) => {
            let xAxis = (window.innerWidth / 2 - e.pageX) / 25
            let yAxis = (window.innerHeight / 2 - e.pageY) / 25
            graphic.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`
          })
          //   // //Animate In
          chart.target.addEventListener('mouseenter', (e) => {
            graphic.style.transition = 'none'
          })
          //   // //Animate Out
          chart.target.addEventListener('mouseleave', (e) => {
            graphic.style.transition = 'all 0.5s ease'
            graphic.style.transform = `rotateY(0deg) rotateX(0deg)`
          })
          pieChartObserver.unobserve(chart.target)
        }
      })
    },
    {
      threshold: 0.8,
    }
  )

  pieCharts.forEach((chart) => {
    pieChartObserver.observe(chart)
  })
</script>

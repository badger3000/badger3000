---
const navItems = [
  {
    name: "Topics",
    url: "/",
    icons: "fa-solid fa-comments",
  },
  {
    name: "About",
    url: "/about",
    icons: "fa-solid fa-address-card",
  },
  {
    name: "Contact",
    url: "/contact",
    icons: "fa-solid fa-inbox",
  },
];
---

<span class="highlight"></span>

{
  navItems.map((item) => (
    <a
      href={item.url}
      class="hover:text-secondary transition-all duration-500 lg:text-2xl lg:p-8 font-medium nav-links"
    >
      <>
        <i class={item.icons + " nav-icon mr-4 z-10 relative"} />
        <span>{item.name}</span>
      </>
    </a>
  ))
}

<button
  class="button group relative z-20 block lg:hidden"
  aria-label="Toggle Menu"
>
  <div
    class="relative flex h-12 w-12 transform items-center justify-center overflow-hidden transition-all duration-200"
  >
    <div
      class="flex h-5 w-5 origin-center transform flex-col justify-between overflow-hidden transition-all duration-300"
    >
      <div
        class="top-bar h-0.5 w-7 origin-left transform bg-dark transition-all duration-300"
      >
      </div>
      <div
        class="middle-bar h-0.5 w-1/2 transform rounded bg-dark transition-all duration-300"
      >
      </div>
      <div
        class="bottom-bar h-0.5 w-7 origin-left transform bg-dark transition-all duration-300"
      >
      </div>
    </div>
  </div>
</button>
<script is:inline>
  function handleMenuToggle(event) {
    const button = event.target.closest("button[aria-label='Toggle Menu']");
    if (button) {
      const navItems = document.querySelector("ul.nav-items");
      const body = document.body;
      const bars = document.querySelectorAll(
        ".top-bar, .middle-bar, .bottom-bar"
      );

      if (navItems && bars.length) {
        navItems.classList.toggle("mobile-menu");
        body.classList.toggle("overflow-hidden");
        bars.forEach((bar) => bar.classList.toggle("animate"));
      }
    }
  }

  function setupMobileMenu() {
    document.removeEventListener("click", handleMenuToggle);
    document.addEventListener("click", handleMenuToggle);
    console.log("Mobile menu setup complete");
  }

  // Initial setup
  setupMobileMenu();

  // Setup for subsequent navigations
  document.addEventListener("astro:after-swap", setupMobileMenu);

  // Cleanup before navigation
  document.addEventListener("astro:before-swap", () => {
    document.removeEventListener("click", handleMenuToggle);
    console.log("Mobile menu cleanup complete");
  });
  //NAv hover states
  function NavHover() {
    const setCssProps = (top, container) => {
      container.style.setProperty("--barTop", `${top}px`);
    };

    let currentTop;

    [...document.querySelector("nav").children].forEach((item) => {
      if (item.classList.contains("current")) {
        currentTop = item.offsetTop;
        setCssProps(currentTop, item.parentNode);
      }

      item.addEventListener("mouseenter", (event) => {
        setCssProps(event.target.offsetTop, item.parentNode);
      });

      item.addEventListener("mouseleave", (event) => {
        setCssProps(currentTop, item.parentNode);
      });
    });
  }
  NavHover();
</script>
<style>
  ul.nav-items.mobile-menu {
    @apply opacity-100 block !important;
  }

  .top-bar.animate {
    @apply group-focus:rotate-[42deg];
  }

  .middle-bar.animate {
    @apply group-focus:-translate-x-10;
  }
  .bottom-bar.animate {
    @apply group-focus:-rotate-[42deg];
  }

  .nav-links {
    text-align: left;
    position: relative;
    display: block;
    padding: 20px;
    margin-left: 20%;
  }
  .nav-links span {
    position: relative;
    z-index: 2;
  }
  .highlight {
    content: "";
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;
    height: 64px;
    background: #dfebed;
    transform: translateY(var(--barTop, 0));
    width: 80%;
    transition: 0.5s;
    pointer-events: none;
    border-radius: 40px 0 0 40px;
  }
  .highlight::after {
    content: "";
    display: block;
    width: 40px;
    height: 40px;
    position: absolute;
    right: 0;
    top: -40px;
    border-bottom-right-radius: 50%;
    box-shadow: 0 20px 0 0 #dfebed;
  }
  .highlight::before {
    content: "";
    display: block;
    width: 40px;
    height: 40px;
    position: absolute;
    right: 0;
    bottom: -40px;
    border-top-right-radius: 50%;
    box-shadow: 0 -20px 0 0 #dfebed;
  }
</style>
